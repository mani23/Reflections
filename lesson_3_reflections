When would you want to use a remote repository rather than keeping all your work local?
if we are working from some other computer or if we want to share our work with other people, so that they can also access it or correct it.

----------

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

not to create unnecessary copies of the work. Only when I have really made a logical change.
Also, if somebody else is working on a file, automatically updating could cause a lot of confusion and errors.

-----------

Describe the differences between forks, clones, and branches. When would you use one instead of another?

branches- is when we make a copy of last commit and make changes to that or continue new work in this copy so that the original remains unaltered or is altered by another person or is having other changes. Master is the name given to the main branch in most git repositories. Every time you create a repository, git creates a master for you.

clones- makes a copy of an entire repository from the github webpage and includes the history of commits onto your computer. it takes one argument - url of the repository to copy.

forks- allows to copy somebody's repository onto your account with a single click. Then you can modify it on Github or your own local machine.

The fork could be used to copy someone's repository when you would like to suggest changes back to the original repository. 
Clones could be used to directly copy the repo to one's own local computer and branching could be done on local computer.


------------

Copy the HTTPS URL, not the SSH URL!

At 1:29, Caroline copies the URL to the repository. The video mistakenly shows the URL to use if the repository is accessed over SSH. The course assumes that the student will use HTTPS, not SSH. Please click on the HTTPS button and copy the URL that shows up for HTTPS. It will begin with https:// rather than git@github.com.

If you are interested in using SSH instead, you can follow the instructions here, but this is not recommended unless you are already familiar with SSH keys.

Sharing your reflections

We encourage you to be bold in sharing your reflections on GitHub. If you're not happy with any of your responses, the best solution is to update that response in one or more new commits. The previous response will still be visible in the commit history, but updating your perspective over time is part of the learning process! Having a commit history that shows your updating perspective will reflect well on you, not poorly.

That said, if you've written anything in your reflections repository that you are not comfortable sharing, you can checkout the commit before you introduced that change, create a new branch at that point, and commit any other changes you are willing to share to the new branch. Then, by only pushing your new branch, you can keep the changes on your original branch private.